@{
    ViewBag.Title = "Thong Ke";
}

@using System.Diagnostics.Eventing.Reader
@model WebApplication1.Models.SearchPageViewModel
@using PagedList.Mvc;

<script type="text/javascript">
    $(document).ready(function () {
        var overviewModel = @Html.Raw(Json.Encode(Model.Overview));
        
        function getNumberOfDays() {
            var days = new Array();

            for (var i = 0; i < overviewModel.length; i++) {
                var vm = overviewModel[i];
                if (!days.includes(vm.InsertedDate)) {
                    days.push(vm.InsertedDate);
                }
            }

            return days;
        }

        function getCurrencies() {
            var currencies = new Array();

            for (var i = 0; i < overviewModel.length; i++) {
                var vm = overviewModel[i];
                if (!currencies.includes(vm.Currency)) {
                    currencies.push(vm.Currency);
                }
            }

            return currencies;
        }

        function hasOneDayOnly() {
            return getNumberOfDays().length === 1;
        }

        function reforamtDate(dateStr) {
            // now date follows France culture dd/MM/yyyy hh:mm:ss, need to change to US style

            var datePart = dateStr.split(' ')[0];

            var parts = datePart.split('/');

            return new Date(parts[1] + '/' + parts[0] + '/' + parts[2]);
        }

        function reformatFloat(numberStr) {
            numberStr = numberStr.replace(new RegExp(',', 'g'), '');
            return parseFloat(numberStr);
        }

        function drawBarChart() {
            var dataBuyIn = new Array();
            var dataSellOut = new Array();

            for(var i=0; i < overviewModel.length; i++) {
                var vm = overviewModel[i];
                dataBuyIn.push({ label: vm.Currency, y: reformatFloat(vm.VndBuyAmount) });
                dataSellOut.push({ label: vm.Currency, y: reformatFloat(vm.VndSelldAmount) });
            }

            var barChart = new CanvasJS.Chart("barChart", {
                theme: "theme2",
                animationEnabled: true,
                title: {
                    text: "Giao dich mua ban ngoai te ngay " + overviewModel[0].InsertedDate.split(' ')[0],
                    font: 30
                },
                toolTip: {
                    shared: true
                },
                data: [
                    {
                        type: "column",
                        name: "Mua vao",
                        legendText: "Mua vao",
                        showInLegend: true,
                        dataPoints: dataBuyIn
                    },
                    {
                        type: "column",
                        name: "Ban ra",
                        legendText: "Ban ra",
                        showInLegend: true,
                        dataPoints: dataSellOut
                    }
                ],
                legend: {
                    cursor: "pointer",
                    itemclick: function(e) {
                        if (typeof(e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                            e.dataSeries.visible = false;
                        } else {
                            e.dataSeries.visible = true;
                        }
                        barChart.render();
                    }
                },
            });

            barChart.render();

            $('#barChart').show();
            $('#lineChart').hide();
        }

        function drawLineChart() {
            var markers = ["triangle", "circle", "square", "cross", "none"];
            var colors = ["#F08080","#20B2AA", "#4661EE", "#EC5657", "#1BCDD1", "#8FAABB", "#B08BEB", "#3EA0DD", "#F5A52A", "#23BFAA", "#FAA586", "#EB8CC6"];

            var currencies = getCurrencies();

            var dataBuyIn = new Array();
            var dataSellOut = new Array();

            for (var i = 0; i < currencies.length; i++) {
                var currency = currencies[i];
                var marker = markers[i % markers.length];
                var color = colors[i % colors.length];

                var pointBuyIn = new Array();
                var pointSellOut = new Array();
                
                for (var j = 0; j < overviewModel.length; j++) {
                    var vm = overviewModel[j];

                    if (currency === vm.Currency) {
                        pointBuyIn.push({
                            x: reforamtDate(vm.InsertedDate),
                            y: reformatFloat(vm.VndBuyAmount)
                        });

                        pointSellOut.push({
                            x: reforamtDate(vm.InsertedDate),
                            y: reformatFloat(vm.VndSelldAmount)
                        });
                    }
                }

                dataBuyIn.push({
                    type: "line",
                    showInLegend: true,
                    lineThickness: 2,
                    name: currency,
                    markerType: marker,
                    color: color,
                    dataPoints: pointBuyIn
                });

                dataSellOut.push({
                    type: "line",
                    showInLegend: true,
                    lineThickness: 2,
                    name: currency,
                    markerType: marker,
                    color: color,
                    dataPoints: pointSellOut
                });
            }

            var buyInLineChart = new CanvasJS.Chart("buyInChart", {
                theme: "theme2",
                animationEnabled: true,
                title: {
                    text: "Giao dich mua ngoai te",
                    font: 30
                },
                toolTip: {
                    shared: false
                },
                axisX:{
                    gridColor: "Silver",
                    tickColor: "silver",
                    valueFormatString: "DD/MM/YYYY"
                },  
                axisY: {
                    gridColor: "Silver",
                    tickColor: "silver"
                },
                data: dataBuyIn,
                legend:{
                    verticalAlign: "center",
                    horizontalAlign: "right",
                    cursor:"pointer",
                    itemclick:function(e){
                        if (typeof(e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                            e.dataSeries.visible = false;
                        }
                        else{
                            e.dataSeries.visible = true;
                        }
                        buyInLineChart.render();
                    }
                }
            });

            var sellOutLineChart = new CanvasJS.Chart("sellOutChart", {
                theme: "theme2",
                animationEnabled: true,
                title: {
                    text: "Giao dich ban ngoai te",
                    font: 30
                },
                toolTip: {
                    shared: false
                },
                axisX:{
                    gridColor: "Silver",
                    tickColor: "silver",
                    valueFormatString: "DD/MM/YYYY"
                },  
                axisY: {
                    gridColor: "Silver",
                    tickColor: "silver"
                },
                data: dataSellOut,
                legend:{
                    verticalAlign: "center",
                    horizontalAlign: "right",
                    cursor:"pointer",
                    itemclick:function(e){
                        if (typeof(e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                            e.dataSeries.visible = false;
                        }
                        else{
                            e.dataSeries.visible = true;
                        }
                        sellOutLineChart.render();
                    }
                }
            });

            buyInLineChart.render();
            sellOutLineChart.render();

            $('#barChart').hide();
            $('#lineChart').show();

        }

        function drawChart() {
            if (hasOneDayOnly()) {
                drawBarChart();
            } else {
                drawLineChart();
            }
        }

        drawChart();
    });
</script>

<div class="row">
    <div class="portlet-body">
        @using (Html.BeginForm("Search", "Home", FormMethod.Post, new { data_toggle = "validator", role = "form", id = "create-form", @class = "form-inline" }))
        {
        <div class="form-group">
            @Html.TextBoxFor(x => x.SearchCriteria.From, null, new { id = "from-date", @type = "date", @class = "form-control", @placeholder = "Tu Ngay" })
        </div>
        <div class="form-group">
            @Html.TextBoxFor(x => x.SearchCriteria.To, null, new { id = "to-date", @type = "date", @class = "form-control", @placeholder = "Den Ngay" })
        </div>
        <button type="submit" class="btn btn-default">Tim kiem</button>
        }
    </div>
</div>
<div class="row">
    <div>
        <div class="portlet light ">
            <div class="portlet-title">
                <div class="caption caption-md">
                    <i class="icon-bar-chart font-dark hide"></i>
                    <span class="caption-subject font-dark bold uppercase">Tong quan</span>
                </div>
            </div>
            <div class="portlet-body">
                <ul class="nav nav-tabs">
                    <li class="active"><a data-toggle="tab" href="#home">Bieu do</a></li>
                    <li><a data-toggle="tab" href="#menu1">Bang</a></li>
                </ul>

                <div class="tab-content">
                    <div id="home" class="tab-pane fade in active">
                        <div id="barChart" style="height: 300px; width: 100%;">
                        </div>
                        <div id="lineChart">
                            <div id="buyInChart" style="height: 300px; width: 100%;">
                            </div>
                            <br />
                            <div id="sellOutChart" style="height: 300px; width: 100%;">
                            </div>
                        </div>
                    </div>
                    <div id="menu1" class="tab-pane fade">
                        <div class="table-scrollable table-scrollable-borderless">
                            @if (Model.Overview == null || Model.Overview.Count == 0)
                            {<p>Hien tai chua co giao dich.</p>
                            }
                            else
                            {
                                <table class="table table-hover table-light">
                                    <thead>
                                        <tr class="uppercase">
                                            <th>Ngay</th>
                                            <th></th>
                                            <th>Mua vao</th>
                                            <th>Ban ra</th>
                                            <th>
                                                <div class="mt-action-img">
                                                    <div class="flgBxPOP" style="background: url(/img/vnd.png) no-repeat scroll 4px 0 transparent" />
                                                </div> Mua vao
                                            </th>
                                            <th>
                                                <div class="mt-action-img">
                                                    <div class="flgBxPOP" style="background: url(/img/vnd.png) no-repeat scroll 4px 0 transparent" />
                                                </div> Ban ra
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.Overview)
                                        {
                                            <tr>
                                                <td>@item.InsertedDate</td>
                                                <td>
                                                    <div class="flgBxPOP flgSprt f@(item.Currency)"></div>
                                                </td>
                                                <td>@item.BuyAmount</td>
                                                <td>@item.SellAmount</td>
                                                <td>@item.VndBuyAmount</td>
                                                <td>@item.VndSelldAmount</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="portlet light ">
        <div class="portlet-title">
            <div class="caption caption-md">
                <i class="icon-bar-chart font-dark hide"></i>
                <span class="caption-subject font-dark bold uppercase">Chi tiet giao dich</span>
            </div>
        </div>
        <div class="portlet-body">
            <div class="table-scrollable table-scrollable-borderless">
                @if (Model.Trans == null || Model.Trans.Count == 0)
                {<p>Hien tai chua co giao dich.</p>
                }
                else
                {
                    <table class="table table-hover table-light">
                        <thead>
                            <tr class="uppercase">
                                <th>Ngay</th>
                                <th></th>
                                <th>So Tien</th>
                                <th>Ty Gia</th>
                                <th>
                                    <div class="mt-action-img">
                                        <div class="flgBxPOP" style="background: url(/img/vnd.png) no-repeat scroll 4px 0 transparent" />
                                    </div> T.tien
                                </th>
                                <th>
                                    Khach Hang
                                </th>
                                <th>Dien Thoai</th>
                                <th>Nhan vien</th>
                                <th>Ghi chu</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Trans)
                            {
                                <tr>
                                    <td>@item.InsertedDate</td>
                                    <td>
                                        <div class="flgBxPOP flgSprt f@(item.Currency)"></div>
                                        <span class="glyphicon glyphicon-arrow-@(item.IsSell ? "left"  : "right")"></span>
                                    </td>
                                    <td>@item.FromAmount</td>
                                    <td>@item.ChangeRate</td>
                                    <td>@item.ToAmount</td>
                                    <td>@item.CustomerName</td>
                                    <td>@item.Phone</td>
                                    <td>@item.UserName</td>
                                    <td>@(string.IsNullOrEmpty(item.Description) ? string.Empty : item.Description.Length < 30 ? item.Description : item.Description.Substring(0, 30) + "...")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>

            Trang @(Model.Trans.PageCount < Model.Trans.PageNumber ? 0 : Model.Trans.PageNumber) of @Model.Trans.PageCount

            @Html.PagedListPager(Model.Trans, page => Url.Action("About", new {from = Model.SearchCriteria.From, to = Model.SearchCriteria.To, page}))
        </div>
    </div>
</div>
