@{
    ViewBag.Title = "Home Page";
}
@using System.Collections.Concurrent
@using WebApplication1.Models
@model TransactionPageViewModel

<script type="text/javascript">
    $(document).ready(function() {
        $('.currency').blur(function () {
            $("#from-currency-amount-hidden").val($(this).val());
            $(this).formatCurrency();
        });

        function getFormattedDate(date) {
            var year = date.getFullYear();
            var month = (1 + date.getMonth()).toString();
            month = month.length > 1 ? month : '0' + month;
            var day = date.getDate().toString();
            day = day.length > 1 ? day : '0' + day;

            return day + '/' + month + '/' + year + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();
        }

        var now = new Date();
        $("#created-datetime").val(getFormattedDate(now));
        $('#created-datetime-hidden').val(getFormattedDate(now));

        $('#exchange-interest').blur(function() {
            var fromAmt = $('#from-currency-amount').val().replace('$', '').replace(new RegExp(',', 'g'), '');
            var interest = $('#exchange-interest').val();

            var toAmount = parseFloat(fromAmt) * parseFloat(interest);
            $('#to-currency-amount').val(toAmount).formatCurrency();
            $('#to-currency-amount-hidden').val(toAmount);
        });

        jQuery.validator.addMethod("from-currency", function(value, ele) {
            if ($("from-currency").val() === '0') {
                return false;
            }

            return true;
        });

        $('#create-form').validate({
            rules: {
                form_currency: "required"
            }
        });
    });

    jQuery.extend(jQuery.validator.messages, {
        required: "Xin vui lòng nhập dữ liệu."
    });
</script>

<div class="jumbotron">
    <h2>Man hinh giao dich</h2>
</div>
<div class="container body-content">
    <div class="row">
        <div class="col-md-7">
            <div class="col-xs-10">
                @using (Html.BeginForm("Create", "Home", FormMethod.Post, new {data_toggle = "validator", role = "form", id = "create-form"}))
                {
                    <div class="form-group row">
                        <label for="customer-name" class="col-xs-2 col-form-label">Khách hàng</label>
                        <div class="col-xs-10">
                            @Html.TextBoxFor(x => x.InputTrans.CustomerName, null, new {@class = "form-control", @placeholder = "Ten khach hang", id = "customer-name", @required = "required"})
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="customer-telephone" class="col-xs-2 col-form-label">Điện thoại</label>
                        <div class="col-xs-10">
                            @Html.TextBoxFor(x => x.InputTrans.Phone, null, new {@class = "form-control", id = "customer-telephone", @required = "required", @type = "number"})
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="from-currency" class="col-xs-2 col-form-label">Ngoại tệ</label>
                        <div class="col-xs-10">
                            @Html.DropDownListFor(x => x.InputTrans.Currency, new SelectList(Enum.GetValues(typeof (Currency))), "Chon ngoai te", new {@class = "form-control required", id = "from-currency", name = "from-currency"})
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-xs-2 col-form-label"> </label>
                        <div class="col-xs-10">
                            @Html.CheckBoxFor(x => x.InputTrans.IsSell) Bán
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="from-currency-amount" class="col-xs-2 col-form-label">Số tiền</label>
                        <div class="col-xs-10">
                            <input type="text" class="form-control currency" laceholder="So Tien" id="from-currency-amount" required="required" />
                            @Html.HiddenFor(x => x.InputTrans.FromAmount, new {id = "from-currency-amount-hidden"})
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="exchange-interest" class="col-xs-2 col-form-label">Tỷ giá</label>
                        <div class="col-xs-10">
                            @Html.TextBoxFor(x => x.InputTrans.ChangeRate, null, new {@class = "form-control", id = "exchange-interest", @required = "required"})
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="to-currency-amount" class="col-xs-2 col-form-label">Thành tiền</label>
                        <div class="col-xs-10">
                            <input type="text" class="form-control" placeholder="0.00" id="to-currency-amount" disabled />
                            @Html.HiddenFor(x => x.InputTrans.ToAmount, new {id = "to-currency-amount-hidden"})
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="created-datetime" class="col-xs-2 col-form-label">Ngày giờ giao dịch</label>
                        <div class="col-xs-10">
                            <input type="text" id="created-datetime" disabled class="form-control" />
                            @Html.HiddenFor(x => x.InputTrans.InsertedDate, new {id = "created-datetime-hidden"})
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="user-name" class="col-xs-2 col-form-label">Nhân viên</label>
                        <div class="col-xs-10">
                            @Html.TextBoxFor(x => x.InputTrans.UserName, null, new {@class = "form-control", @placeholder = "Ten nhan vien", id = "user-name", @required = "required"})
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="transaction-description" class="col-xs-2 col-form-label">Ghi chú</label>
                        <div class="col-xs-10">
                            @Html.TextAreaFor(x => x.InputTrans.Description, new {@class = "form-control", id = "transaction-description", @rows = "3"})
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary">Submit</button>
                }
            </div>
        </div>
        <div class="col-md-5">
            <div class="col-xs-11 ">
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Giao dịch</th>
                            <th>Số tiền</th>
                            <th>Tỷ giá</th>
                            <th>Thành tiền</th>
                            <th>Nhân viên</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.NewestTrans)
                        {
                            <tr>
                                <td> @(item.IsSell ? "Ban" : "Mua")</td>
                                <td>@item.Currency @item.FromAmount</td>
                                <td>@item.ChangeRate</td>
                                <td>VND @item.ToAmount</td>
                                <td>@item.UserName</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
